apiVersion: generators.external-secrets.io/v1alpha1
kind: Password
metadata:
  name: keycloak
  namespace: keycloak
spec:
  length: 36
  digits: 5
  symbols: 5
  symbolCharacters: "/-+"
  noUpper: false
  allowRepeat: true
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: argocd-store
  namespace: keycloak
spec:
  provider:
    kubernetes:
      remoteNamespace: argocd
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          namespace: keycloak
          key: ca.crt
      auth:
        serviceAccount:
          name: keycloak-config
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: keycloak-config
  namespace: keycloak
spec:
  refreshInterval: "0"
  secretStoreRef:
    name: argocd-store
    kind: SecretStore
  target:
    name: keycloak-config
    template:
      engineVersion: v2
      data:
        KC_BOOTSTRAP_ADMIN_PASSWORD: "{{ `{{.IDE_PASSWORD}}` }}"
        KC_DB_USERNAME: keycloak
        KC_DB_PASSWORD: "{{ `{{.KC_DB_PASSWORD}}` }}"
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: "{{ `{{.KC_DB_PASSWORD}}` }}"
        USER_PASSWORD: "{{ `{{.IDE_PASSWORD}}` }}"
  data:
    - secretKey: IDE_PASSWORD
      remoteRef:
        key: ide-password
        property: password
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: Password
          name: keycloak
      rewrite:
        - transform:
            template: "KC_DB_PASSWORD"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eso-store
  namespace: keycloak
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: keycloak
  name: eso-store
rules:
  - apiGroups: [""]
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - selfsubjectrulesreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eso-store
  namespace: keycloak
subjects:
  - kind: ServiceAccount
    name: eso-store
    namespace: keycloak
roleRef:
  kind: Role
  name: eso-store
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: keycloak
spec:
  provider:
    kubernetes:
      remoteNamespace: keycloak
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          namespace: keycloak
          key: ca.crt
      auth:
        serviceAccount:
          name: eso-store
          namespace: keycloak
